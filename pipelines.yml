# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "2ad241b7-d342-4147-a83d-925fc43a05ad"
  imageRepository: "champions-apis"
  containerRegistry: "zencontainerregistry.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
- stage: Test
  displayName: Run Test and Publish 
  jobs:
  - job: Test
    displayName: Test
    pool:
      vmImage: $(vmImageName)
    strategy:
      matrix:
        Python38:
          python.version: '3.8'
    
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(python.version)'
      inputs:
        versionSpec: '$(python.version)'

    - script: python -m pip install --upgrade pip
      displayName: Upgrade pip

    - script: pipx install poetry
      displayName: Install Poetry

    - script: poetry install --no-root
      displayName: Install all dependencies, including Nox
    
    - script: CONFIG=tests/test.env poetry run alembic upgrade head
      displayName: Run testing database migration

    - script: poetry run nox
      displayName: Test with Nox
      env:
        DB_CONNECTION_STRING: "sqlite:///testing.db"

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish test results for Python $(python.version)'


- stage: Build
  displayName: Build and push stage
  dependsOn: Test
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest